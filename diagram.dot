digraph {
    rankdir=LR;
    node [shape=box];

    {
        node [style=filled,fillcolor=lightyellow];

        // session canonicalization to detect duplicate flows?
        "plan.knit";
        {
            rank=same;
            // .knit/sessions/xxxx
            session;
            // .knit/cas/xx/yyyy
            cas;
            // .knit/jobcache/xx/yyyy
            // TODO this seems more appropriate on the workdir
            // .knit/jobcache/xx/yyyy.pending
            jobcache;
        }
        // .knit/workdirs/xx/yyyy
        workdir;
    }

    "plan.knit" -> session [label="parse\nbuild"];
    "plan.knit" -> resources;
    step -> job [label="compile\nbuild"];
    job -> jobcache [label=check];
    production -> step [label=fulfill];
    session -> step [label=list];
    session -> invocation [label=close];

    // dispatch
    job -> workdir [label=unpack];
    workdir -> production [label=pack];
    production -> jobcache [label=complete];

    {
        edge [style=dotted,arrowhead=empty];
        resources -> cas;
        job -> cas;
        production -> cas;
        invocation -> cas;
    }

    // step states
    blocked;
    available;
    blocked -> available;
    available -> fulfilled;
    blocked -> "unmet\n(requirements)";

    // step flags
    NONE -> SS_JOB -> "SS_JOB|SS_FINAL";
    NONE -> SS_FINAL;

    // job states
    processing [label="processing\nactive"];
    idle -> processing -> complete;
    processing -> canceled [label=terminate];
    processing -> idle [label=lost];

    // dependencies
    dependency [label="dependency\npredecessor\nupstream\nchild\nproducer\nprovider\nprerequisite\nrequirement"];
    dependent [label="dependent\nsuccessor\ndownstream\nparent\nconsumer"];
    dependency -> dependent [label=data];

    { rank=same; idle; blocked; step; }
}
